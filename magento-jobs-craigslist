#!/usr/bin/ruby

require 'rubygems'
require 'hpricot'
require 'open-uri'
require 'date'
require 'optparse'
require 'json'


options = {}
optparse = OptionParser.new(:posix) do |opts|
  opts.banner = "Check major metro areas on Craigslist for Magento related jobs.\nUsage: magento-craigslist-jobs [options]"

  options[:days] = 7
  opts.on( "-d N", "--days=N", Integer, "How recent listings must be (default is #{options[:days]})" ) do |days|
    options[:days] = days
  end

  options[:json] = false
  opts.on( "-j", "--json", nil, "Output data as JSON" ) do
    options[:json] = true
  end

  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end
end

begin
  optparse.parse!
rescue OptionParser::ParseError => e
  puts e
  exit
end

today   = Date.today
urlbase = 'http://%s.craigslist.org/search/?areaID=11&subAreaID=&query=magento&catAbb=ggg'
areas   = [ 'newyork', 'chicago', 'sfbay', 'washingtondc.en', 'losangeles',
            'houston', 'denver', 'boston', 'austin', 'atlanta', 'dallas',
            'detroit', 'houston', 'lasvegas', 'miami', 'minneapolis',
            'orangecounty', 'philadelphia', 'phoenix', 'portland', 'raleigh',
            'sacramento', 'sandiego', 'seattle' ]

#areas = [ 'newyork', 'chicago', 'sfbay' ]

results = []

areas.each do |area|
  $stderr.print "#{area}|"

  doc = Hpricot(open(urlbase % area))
  ((doc.search('blockquote')[1]).search("p")).each do |line|
    vals = line.innerHTML.scan(/(.*) - <a href="([^"]*)">([^<]*)<\/a>.*/)

    date = Date.parse(vals[0][0])
    link = vals[0][1]
    title = vals[0][2].encode('utf-8', 'iso-8859-1')

    next if (today - date) > options[:days]
    results << { :date => date.strftime("%m/%d"), :link => link, :area => area, :title => title, :budget => '' }
  end
end

$stderr.puts ""
if options[:json]
  puts results.to_json
else
  (results.sort { |l,r| l[:date] <=> r[:date] }).each { |r| puts "%6s\t%-60s\t%-10s\t%s\n" % [r[:date], r[:link], r[:area], r[:title]] }
end
